class Popup{constructor(){this.popup=document.createElement("div"),this.popup.classList.add("popupjs"),this.availableThemes=["dark","light"]}update(t){return this.popup.innerHTML=t,this}theme(t){return this.popup.classList.add("popup-theme-"+t),this}CSS(t){const s=Object.prototype.toString.call(t);if("[object String]"===s)this.popup.innerHTML=t;else{if("[object Object]"!==s)throw new Error("Invalid CSS object");for(const s in t)this.popup.style[s]=t[s]}return this}animate(t){if("string"!=typeof t)throw new Error("Invalid keyframesId");if("bottom"!==t&&"top"!==t)throw new Error("Invalid keyframesId");return this.popup.classList.add("popup-animation-"+t),this}displaySide(t){switch(t){case"top left":this.popup.classList.add("popup-top-left");break;case"top right":this.popup.classList.add("popup-top-right");break;case"bottom right":this.popup.classList.add("popup-bottom-right");break;case"bottom left":this.popup.classList.add("popup-bottom-left");break;default:throw new Error("Invalid side")}return this}init(t){const s=Object.prototype.toString.call(t);if("[object Object]"!==s)throw new Error("Invalid settings object");if("string"!=typeof t.msg)throw new Error("Invalid msg");return"string"!=typeof t.theme?this.theme("light"):this.theme(t.theme),"string"!=typeof t.side?this.displaySide("top right"):this.displaySide(t.side),"string"!=typeof t.animation?this.animate("top"):this.animate(t.animation),this.update(t.msg),"css"in t&&("[object Object]"===Object.prototype.toString.call(t.css)||"string"==typeof t.css)&&this.CSS(t.css),this}append(t){if(t||(t=document.body),!(t instanceof Element))throw new Error("Invalid root");return t.appendChild(this.popup),this}show(){return this.popup.classList.add("popup-show"),this}hide(){return this.popup.classList.remove("popup-show"),this}}export default Popup;